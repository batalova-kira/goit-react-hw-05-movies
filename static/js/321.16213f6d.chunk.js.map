{"version":3,"file":"static/js/321.16213f6d.chunk.js","mappings":"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","sources":["components/API.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MoviesList/MoviesList.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\nconst API_KEY = '4aa6e84c0a98af38e0326eca8b6e68f6';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport async function TrendingMovies() {\n  const responce = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return responce.data.results;\n}\n\nexport const getMovieById = async movieId => {\n  const responce = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nexport const getMovieSearch = async query => {\n  const responce = await axios.get(\n    `search/movie?query\n=${query}&include_adult=false&api_key=${API_KEY}`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.p`\n  display: inline-block;\n  margin: 0 auto;\n  padding: 100px;\n  font-weight: 600;\n  font-size: 20px;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { ErrorMessage } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#1a102b\"\n      ariaLabel=\"three-dots-loading\"\n      visible={true}\n    />\n  );\n};\n\nexport const Error = () => {\n  return (\n    <ErrorMessage>\n      <p>Whoops! Error! Please, reload the page! </p>\n    </ErrorMessage>\n  );\n};\n","import {\n  List,\n  MovieDate,\n  MovieImg,\n  MovieItem,\n  MovieLink,\n  MovieTitle,\n} from './MoviesList.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`}>\n            <MovieImg\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultImg\n              }\n              width={200}\n              alt=\"poster\"\n            />\n            <MovieTitle>{movie.title || movie.name}</MovieTitle>\n            {movie.release_date && (\n              <MovieDate>\n                ({String(movie.release_date).substring(0, 4)})\n              </MovieDate>\n            )}\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoxSearch = styled.div`\n  background-color: #adb2d3;\n  color: #1a102b;\n  height: 100vh;\n`;\n\nexport const SearchInput = styled.input`\n  height: 30px;\n  width: 80%;\n  padding-bottom: 4px;\n  outline: none;\n  border: none;\n  border-color: #e6e6ee;\n  border-bottom: 1px solid;\n\n  font-size: 20px;\n  background-color: transparent;\n  color: #1a102b;\n`;\n\nexport const SearchForm = styled.form`\n  padding: 16px;\n  display: flex;\n`;\n\nexport const SearchBtn = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  background-color: #1a102b;\n  color: #e6e6ee;\n  &:active,\n  &:focus,\n  &:hover {\n    color: #e74f88;\n  }\n`;\n","import { getMovieSearch } from 'components/API';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BoxSearch, SearchBtn, SearchForm, SearchInput } from './Movies.styled';\nimport { Error, Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchMovie = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!searchMovie) return;\n    async function getSearchMovie() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const fetchMovie = await getMovieSearch(searchMovie);\n        setMovies(fetchMovie);\n        if (fetchMovie.length === 0) {\n          toast.error('Not found any movie!');\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getSearchMovie();\n  }, [searchMovie]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const formValue = e.currentTarget;\n    if (formValue.elements.query.value === '') {\n      toast.error('Please fill out this field!');\n      return setSearchParams({});\n    }\n    setSearchParams({ query: formValue.elements.query.value });\n    formValue.reset();\n  };\n\n  return (\n    <BoxSearch>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search...\"\n        />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </SearchForm>\n\n      {movies && <MoviesList movies={movies} />}\n      {isLoading && <Loader />}\n      {error && <Error />}\n    </BoxSearch>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","TrendingMovies","_TrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee5","responce","_context5","prev","next","axios","concat","sent","abrupt","data","results","stop","language","getMovieById","_ref","_callee","movieId","_context","_x","getMovieCast","_ref2","_callee2","_context2","cast","_x2","getMovieReviews","_ref3","_callee3","_context3","_x3","getMovieSearch","_ref4","_callee4","query","_context4","_x4","ErrorMessage","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","ThreeDots","height","width","radius","color","ariaLabel","visible","Error","children","MoviesList","movies","List","map","movie","MovieItem","_jsxs","MovieLink","to","id","MovieImg","src","poster_path","alt","MovieTitle","title","name","release_date","MovieDate","String","substring","BoxSearch","SearchInput","_templateObject2","SearchForm","_templateObject3","SearchBtn","_templateObject4","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchMovie","get","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","_getSearchMovie","fetchMovie","length","toast","t0","finish","getSearchMovie","onSubmit","e","preventDefault","formValue","currentTarget","elements","value","reset","type","autoComplete","autoFocus","placeholder"],"sourceRoot":""}