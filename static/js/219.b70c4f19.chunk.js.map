{"version":3,"file":"static/js/219.b70c4f19.chunk.js","mappings":"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","sources":["components/API.js","components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader/Loader.styled.js","components/Loader/Loader.js"],"sourcesContent":["import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\nconst API_KEY = '4aa6e84c0a98af38e0326eca8b6e68f6';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport async function TrendingMovies() {\n  const responce = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return responce.data.results;\n}\n\nexport const getMovieById = async movieId => {\n  const responce = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nexport const getMovieSearch = async query => {\n  const responce = await axios.get(\n    `search/movie?query\n=${query}&include_adult=false&api_key=${API_KEY}`\n  );\n  return responce.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastBox = styled.div`\n  height: 100%;\n  background-color: #adb2d3;\n  color: #1a102b;\n`;\n\nexport const Actors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 16px;\n  justify-content: start;\n`;\n\nexport const Actor = styled.li`\n  align-items: baseline;\n  margin: 16px;\n  border-radius: 5px;\n  overflow: hidden;\n  width: 150px;\n  box-shadow: rgba(0, 0, 0, 0.15) 2.4px 2.4px 3.2px;\n  background-color: #e6e6ee;\n`;\n\nexport const ImgCast = styled.img`\n  margin-bottom: 8px;\n`;\n\nexport const TitleCast = styled.h4`\n  padding: 0 8px;\n  text-align: center;\n  margin-bottom: 8px;\n`;\n\nexport const CharacterCast = styled.p`\n  padding: 0 8px;\n  text-align: center;\n  margin-bottom: 8px;\n`;\n","import { getMovieCast } from 'components/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Actor,\n  Actors,\n  CastBox,\n  CharacterCast,\n  ImgCast,\n  TitleCast,\n} from './Cast.styled';\nimport { Error, Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const fetchCast = await getMovieCast(movieId);\n        setActors(fetchCast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <CastBox>\n      {isLoading && <Loader />}\n      {error && <Error />}\n      {actors ? (\n        <Actors>\n          {actors.map(item => (\n            <Actor key={item.id}>\n              <ImgCast\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                    : defaultImg\n                }\n                width={150}\n                alt=\"poster\"\n              />\n              <TitleCast> {item.name || item.original_name}</TitleCast>\n              <CharacterCast>Character: {item.character}</CharacterCast>\n            </Actor>\n          ))}\n        </Actors>\n      ) : (\n        'Sorry, there is no information about the cast!'\n      )}\n    </CastBox>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.p`\n  display: inline-block;\n  margin: 0 auto;\n  padding: 100px;\n  font-weight: 600;\n  font-size: 20px;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { ErrorMessage } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#1a102b\"\n      ariaLabel=\"three-dots-loading\"\n      visible={true}\n    />\n  );\n};\n\nexport const Error = () => {\n  return (\n    <ErrorMessage>\n      <p>Whoops! Error! Please, reload the page! </p>\n    </ErrorMessage>\n  );\n};\n"],"names":["API_KEY","TrendingMovies","_TrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee5","responce","_context5","prev","next","axios","concat","sent","abrupt","data","results","stop","language","getMovieById","_ref","_callee","movieId","_context","_x","getMovieCast","_ref2","_callee2","_context2","cast","_x2","getMovieReviews","_ref3","_callee3","_context3","_x3","getMovieSearch","_ref4","_callee4","query","_context4","_x4","CastBox","styled","_templateObject","_taggedTemplateLiteral","Actors","_templateObject2","Actor","_templateObject3","ImgCast","_templateObject4","TitleCast","_templateObject5","CharacterCast","_templateObject6","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getCast","fetchCast","t0","finish","_jsxs","children","_jsx","Loader","Error","map","item","src","profile_path","width","alt","name","original_name","character","id","ErrorMessage","ThreeDots","height","radius","color","ariaLabel","visible"],"sourceRoot":""}